version: '3.5'
services:
  rails:
    container_name: CONTAINER_NAME
    build:
      context: ..
      dockerfile: PATH_TO_DOCKERFILE
    volumes:
      - ../.:/app
      - railsgems:/usr/local/bundle
      - node_modules:/app/node_modules
    environment:
      - POSTGRES_URL=postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres/$POSTGRES_DB
      - RAILS_ENV=production
    expose:
      - 3000
    ports:
      - 3000:3000
      - 3035:3035
    depends_on:
      - traefik
      - redis
    tty: true
    stdin_open: true
    labels:
      traefik.enable: 'true'
      traefik.http.routers.rails.rule: Host(`DNS_NAME`)
      traefik.http.routers.rails.tls: true
      traefik.http.routers.rails.tls.certresolver: myresolver

  redis:
    image: redis:5

  sidekiq:
    container_name: CONTANER_SIDEKIQ_NAME
    build:
      context: ..
      dockerfile: PATH_TO_DOCKERFILE_SIDEKIQ
    environment:
      - RAILS_ENV=production
    depends_on:
      - rails
      - redis
    volumes:
      - ../.:/app
      - railsgems:/usr/local/bundle
    restart: unless-stopped

  traefik:
    image: traefik:v2.3
    container_name: CONTAINER_NAME_TRAEFIK
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./production.toml:/traefik.toml
      - ./acme.json:/acme.json

volumes:
  railsgems:
  node_modules:

networks:
  default:
    name: NETWORK_NAME
    external: true
